services:
  traefik:
    image: traefik:latest
    command:
      - --api.insecure=true
      - --providers.docker=false
      - --providers.file.directory=/etc/traefik/dynamic_conf
      - --accesslog=true
      - --accesslog.fields.headers.defaultmode=keep
      - --accesslog.fields.headers.names.User-Agent=drop
      - --accesslog.fields.headers.names.Content-Type=drop
      - --entryPoints.web.address=:80

    ports:
      - 80:80
      - 8181:8080 # The Traefik dashboard
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik/dynamic_conf:/etc/traefik/dynamic_conf
      - ./traefik/logs:/logs

    networks:
      - traefik-ingress
    extra_hosts:
      - host.docker.internal:host-gateway
  db:
    image: postgres:16
    restart: always
    environment:
      POSTGRES_DB: ecomon
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
    ports:
      - 5432:5432
    volumes:
      - ecomon_data:/var/lib/postgresql/data
      - ./postgres/init-db.sh:/docker-entrypoint-initdb.d/init-db.sh
    networks:
      - ecomon
  db-migrate:
    build:
      context: ./hasura
      dockerfile: Dockerfile.hasura-migrate
    depends_on:
      - db
      - graphql-engine
    environment:
      HASURA_ENDPOINT: http://graphql-engine:8080
      HASURA_ADMIN_SECRET: ${HASURA_ADMIN_SECRET}
      APPLY_METADATA: true
      APPLY_MIGRATIONS: true
      APPLY_SEEDS: true
    # import current files as volume so a rebuild is no required on database/metada changes
    volumes:
      - ./hasura:/app
    networks:
      - ecomon

  graphql-engine:
    image: hasura/graphql-engine:v2.38.0-ce
    ports:
      - 8080:8080
    restart: always
    environment:
      HASURA_GRAPHQL_METADATA_DATABASE_URL: postgres://${DB_USERNAME}:${DB_PASSWORD}@db:5432/hasura
      PGDATABASE_URL: postgres://${DB_USERNAME}:${DB_PASSWORD}@db:5432/ecomon
      HASURA_GRAPHQL_ENABLE_CONSOLE: true # set to false to disable console
      HASURA_GRAPHQL_READ_ONLY_MODE: false
      HASURA_GRAPHQL_DEV_MODE: true
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log
      HASURA_GRAPHQL_ADMIN_SECRET: ${HASURA_ADMIN_SECRET}
      HASURA_GRAPHQL_UNAUTHORIZED_ROLE: user # Allow access without admin secret
      HASURA_WEBHOOKS_BASE_URL: ${HASURA_WEBHOOKS_BASE_URL}

      # HASURA_GRAPHQL_AUTH_HOOK: ${HASURA_WEBHOOKS_BASE_URL}/session
      # HASURA_WEBHOOKS_API_KEY: ${HASURA_API_KEY}
      # HASURA_GRAPHQL_AUTH_HOOK_SEND_REQUEST_BODY: ${HASURA_GRAPHQL_AUTH_HOOK_SEND_REQUEST_BODY}

    depends_on:
      - db

    networks:
      - ecomon
      - traefik-ingress
    extra_hosts:
      - host.docker.internal:host-gateway
  redis:
    image: redis:7-alpine
    container_name: redis
    ports:
      - 6379:6379
    networks:
      - ecomon
volumes:
  ecomon_data:

networks:
  ecomon:
    driver: bridge
  traefik-ingress:
    driver: bridge
