services:
   backend:
      image: mdas-backend
      build: ./backend
      depends_on:
         - db
      environment:
         POSTGRES_HOST: db
         POSTGRES_DATABASE: ${POSTGRES_DB}
         POSTGRES_PORT: ${POSTGRES_PORT}
         POSTGRES_USER: ${POSTGRES_USER}
         POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
         TMP_DIRECTORY: /tmp
         SAMPLE_FILES_DIRECTORY: /files
         PROXY_PATH_PREFIX: /ecomon/api/v1
         ROOT_PATH: /ecomon/api/v1
         REPORTS_DIRECTORY: /reports
      volumes:
         - ${SAMPLE_FILES_DIRECTORY}:/files
         - ${TMP_DIRECTORY}:/tmp
         - ${DATA_DIRECTORY}:${DATA_DIRECTORY}
         - ${REPORTS_DIRECTORY}:/reports

   frontend:
      image: mdas-frontend
      build: ./frontend

   db:
      image: postgres:16
      restart: always
      environment:
         POSTGRES_DB: "${POSTGRES_DATABASE}"
         POSTGRES_USER: "${POSTGRES_USER}"
         POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
         POSTGRES_ROOT_PASSWORD: "${POSTGRES_ROOT_PASSWORD}"
      ports:
         - "${POSTGRES_PORT}:5432"
      volumes:
         - postgres_data:/var/lib/postgresql/data
         - ./postgres/init-db.sh:/docker-entrypoint-initdb.d/init-db.sh

   traefik:
      image: traefik:v2.10
      command:
         - "--api.insecure=true"
         - "--providers.docker=false"
         - "--providers.file.directory=/etc/traefik/dynamic_conf"
         - "--accesslog=true"
         - "--accesslog.fields.headers.defaultmode=keep"
         - "--accesslog.fields.headers.names.User-Agent=drop"
         - "--accesslog.fields.headers.names.Content-Type=drop"
         - "--entryPoints.web.address=:80"
      ports:
         - "80:80"
         - "8080:8080" # Traefik dashboard
      volumes:
         - /var/run/docker.sock:/var/run/docker.sock
         - "./traefik/dynamic_conf:/etc/traefik/dynamic_conf"
         - "./traefik/logs:/logs"
      extra_hosts:
         - "host.docker.internal:host-gateway"

volumes:
   postgres_data:
